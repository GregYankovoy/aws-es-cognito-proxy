server {
    listen 80;
    server_name $host;
    rewrite ^/$ https://$host/_plugin/kibana redirect;
	
    location ^~ /healthcheck {
        access_log off;
        return 200 'Healthy';
        add_header Content-Type text/plain;
    }

    location ^~ /_plugin/kibana {
        # use aws dns resolver
        resolver 169.254.169.253 valid=30s;

        set $upstream_es {es_endpoint};
        set $upstream_cognito {cognito_endpoint};
    
        # Forward requests to Kibana
        proxy_pass https://$upstream_es/_plugin/kibana;
 
        # Handle redirects to Amazon Cognito
        proxy_redirect https://$upstream_cognito https://$host;
 
        # Update cookie domain and path
        proxy_cookie_domain $upstream_es $host;
 
        proxy_set_header Accept-Encoding "";
        sub_filter_types *;
        sub_filter $upstream_es $host;
        sub_filter_once off;
 
        # Response buffer settings
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
 
    location ~ \/(log|sign|error|fav|forgot|change) {
        # use aws dns resolver
        resolver 169.254.169.253 valid=30s;

        set $upstream_es {es_endpoint};
        set $upstream_cognito {cognito_endpoint};

        # Forward requests to Cognito
        proxy_pass https://$upstream_cognito;
 
        # Handle redirects to Kibana
        proxy_redirect https://$upstream_es https://$host;
 
        # Handle redirects to Amazon Cognito
        proxy_redirect https://$upstream_cognito https://$host;
 
        # Update cookie domain
        proxy_cookie_domain $upstream_cognito $host;
    }
}